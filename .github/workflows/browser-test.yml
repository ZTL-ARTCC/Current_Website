name: browser test

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize]

env:
  BUILD-ARTIFACT: ztl-test-artifact-v1

jobs:
#  setup-variables:
#    uses: ZTL-ARTCC/Current_Website/.github/workflows/setup-variables.yml@main
  build:
    # REMINDER - CHANGE BRANCH TO MAIN ON THE FOLLOWING STATEMENT BEFORE DEPLOYING!
    uses: ZTL-ARTCC/Current_Website/.github/workflows/build.yml@Browser-testing
    with:
      artifact-name: ztl-test-artifact-v1
      browser-test: true

  dusk:
    name: Execute browser tests
    runs-on: ubuntu-latest
#    needs: [setup-variables]
    needs: [build]

    env:
      VATSIM_OAUTH_CLIENT: ${{ secrets.VATSIM_DEV_OAUTH_CLIENT }}
      VATSIM_OAUTH_SECRET: ${{ secrets.VATSIM_DEV_OAUTH_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up MySQL
        run: |
          sudo systemctl start mysql
          mysql --user="root" --password="root" -e "CREATE DATABASE \`ztl_test\` character set UTF8mb4 collate utf8mb4_bin;"

      - name: Setup php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ needs.setup-variables.outputs.php-version }}
          extensions: gd,zip

#      - name: Install php packages
#        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup-variables.outputs.node-version }}

# REMOVED - BUILD SCRIPT STUFF
#      - name: Update node packages
#        run: npm ci

#      - name: Build assets
#        run: npm run prod

#      - name: Uninstall node dev dependencies
#        run: npm prune --omit=dev

#      - name: Remove scripts
#        run: rm -r scripts

# DEPLOY TO GH ENVIRONMENT
      - name: Retrieve artifact for deploy
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.BUILD-ARTIFACT }}

      - name: Get directory
        run: ls -l

      - name: Extract artifact
        run: |
          tar -zxvf ${{ env.BUILD-ARTIFACT }}.tar.gz
          rm ${{ env.BUILD-ARTIFACT }}.tar.gz

      - name: Copy .env
        run: cp .env.test .env

      - name: Generate key
        run: php artisan key:generate

      - name: Install Chrome binaries
        run: php artisan dusk:chrome-driver --detect

      - name: Start Chrome Driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux &

      - name: Run Migrations
        run: php artisan migrate --no-interaction --force && php artisan db:seed

      - name: Change permissions to dusk
        run: chmod -R 0755 vendor/laravel/dusk/bin/ 

      - name: Create storage symlink
        run: php artisan storage:link

      - name: Run Laravel Server
        run: php artisan serve --no-reload &

      - name: Verify Server is Online
        run: curl localhost:8000 &

      - name: Execute tests
        run: php artisan dusk

      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: tests/Browser/screenshots

      - name: Upload Console Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: console
          path: tests/Browser/console
